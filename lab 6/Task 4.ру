import pandas as pd

# Создаем датасет прямо в коде
data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Anna', 'Mike', 'Lisa', 'John', 'Sarah'],
    'Age': [20, 21, 19, 22, 20, 21, 20, 19, 22, 20],
    'Group': ['A', 'B', 'A', 'B', 'C', 'A', 'B', 'C', 'A', 'B'],
    'Score': [85, 90, 78, 88, 92, 76, 89, 95, 81, 87]
}

df = pd.DataFrame(data)

print("Исходный датасет:")
print(df)

# ===== Часть 1: Группировка и агрегация =====
print("\n=== Результаты группировки ===")

# 1. Группировка по Group с агрегацией
group_stats = df.groupby('Group').agg({
    'Score': 'mean',
    'Age': 'median'
}).rename(columns={
    'Score': 'Средний балл',
    'Age': 'Медианный возраст'
})

print("\nСредний балл и медианный возраст по группам:")
print(group_stats)

# 2. Добавление столбца Passed
df['Passed'] = df['Score'].apply(lambda x: 1 if x >= 60 else 0)
print("\nДатасет с добавленным столбцом Passed:")
print(df)

# ===== Часть 2: Фильтрация и сортировка =====
print("\n=== Результаты фильтрации ===")

# 1. Фильтрация студентов с баллом выше 80
high_scorers = df[df['Score'] > 80]
print("\nСтуденты с баллом выше 80:")
print(high_scorers)

# 2. Сортировка по убыванию балла
sorted_students = high_scorers.sort_values('Score', ascending=False)
print("\nОтсортированные по убыванию балла:")
print(sorted_students[['Name', 'Age', 'Group', 'Score']])

# 3. Самый старший и младший студент
oldest = df[df['Age'] == df['Age'].max()]
youngest = df[df['Age'] == df['Age'].min()]

print("\nСамый старший студент(ы):")
print(oldest[['Name', 'Age', 'Group', 'Score']])
print("\nСамый младший студент(ы):")
print(youngest[['Name', 'Age', 'Group', 'Score']])
